From f60ab9fbbf1fa1e841185a1bf399addcfe7c3e0e Mon Sep 17 00:00:00 2001
From: Meticulus <theonejohnnyd@gmail.com>
Date: Sun, 15 Jul 2018 06:28:16 -0500
Subject: [PATCH] "0001-linker-CoH-Shimmer _______________________________

*Previous From 94a0427a0424fef0090d817d96708076b41ab5a7 Mon Sep 17 00:00:00 2001
*Previous From: Meticulus <theonejohnnyd@gmail.com>
*Previous Date: Sat, 31 Mar 2018 09:39:03 -0500
*Previous Subject: [PATCH] "0001-linker-CoH-Shimmer _______________________________
*
**Previous From f4e41af0e2b9fc44bcc6a38a8b6029c405493883 Mon Sep 17 00:00:00 2001
**Previous From: Meticulus <theonejohnnyd@gmail.com>
**Previous Date: Wed, 28 Mar 2018 08:39:38 -0500
**Previous Subject: [PATCH] linker: CoH Shimmer
**
**-Plug into the Coh Vendor Project for getting shim list.
**-Hopefully this will simplify shimming accross ROMs.
**-Sould work in addition to any ROMs shim solution.
**
**Change-Id: If2697911d225ec2338db97ef6c505d40c00a9d2e"
*
*Change-Id: Ide67e4a7bfde0bf2a39f0d0d130546c945efbd2d"

Change-Id: I3cd7753b791ae541bc0efd175010f25d1c112f2f
---
 linker/Android.bp | 10 ++++++++--
 linker/linker.cpp | 24 +++++++++++++++++++++++-
 2 files changed, 31 insertions(+), 3 deletions(-)

diff --git a/linker/Android.bp b/linker/Android.bp
index d74fbd3..6ef8df0 100644
--- a/linker/Android.bp
+++ b/linker/Android.bp
@@ -69,7 +69,11 @@ cc_binary {
     },
 
     // We need to access Bionic private headers in the linker.
-    include_dirs: ["bionic/libc"],
+    include_dirs: [
+	"bionic/libc",
+        "vendor/coh/coh_hisi/include",
+        "vendor/coh/coh_common/include",
+	],
 
     // -shared is used to overwrite the -Bstatic and -static
     // flags triggered by LOCAL_FORCE_STATIC_EXECUTABLE.
@@ -87,7 +91,7 @@ cc_binary {
         "-Wall",
         "-Wextra",
         "-Wunused",
-        "-Werror",
+	"-Werror",
     ],
 
     // TODO: split out the asflags.
@@ -139,6 +143,8 @@ cc_binary {
 
         "liblog",
         "libc++_static",
+	"libcoh_hisi_bp_static",
+	"libcoh_common_bp_static",
 
         // Important: The liblinker_malloc should be the last library in the list
         // to overwrite any other malloc implementations by other static libraries.
diff --git a/linker/linker.cpp b/linker/linker.cpp
index 620e189..a4439dd 100644
--- a/linker/linker.cpp
+++ b/linker/linker.cpp
@@ -69,7 +69,14 @@
 #include "android-base/strings.h"
 #include "android-base/stringprintf.h"
 #include "ziparchive/zip_archive.h"
-
+/*
+ * START [ CoH Shimmer ]
+ */
+#include <coh_hisi/shimmer.h>
+#include <coh/list.h>
+/*
+ * END [CoH Shimmer ]
+ */
 // Override macros to use C++ style casts.
 #undef ELF_ST_TYPE
 #define ELF_ST_TYPE(x) (static_cast<uint32_t>(x) & 0xf)
@@ -1168,6 +1175,21 @@ const char* fix_dt_needed(const char* dt_needed, const char* sopath __unused) {
 
 template<typename F>
 static void for_each_dt_needed(const ElfReader& elf_reader, F action) {
+  /* START [CoH Shimmer]
+   * Meticulus:
+   * The following lines of code should be the first lines
+   * in the function "for_each_dt_needed" if the ROM does
+   * not have shim support like pure AOSP. This patch
+   * is for ROMs that have shim support like LineageOS.
+   */
+  list_t coh_shims = list_create(NULL,0,1);
+  coh_get_shims_for_path(&coh_shims, elf_reader.name());
+  for (int i = 0; i < coh_shims.count; i++)
+    action(static_cast<char *>(list_get_at_index(&coh_shims, i)));
+  list_free(&coh_shims);
+  /*
+   * END [Coh Shimmer]
+   */
   for (const ElfW(Dyn)* d = elf_reader.dynamic(); d->d_tag != DT_NULL; ++d) {
     if (d->d_tag == DT_NEEDED) {
       action(fix_dt_needed(elf_reader.get_string(d->d_un.d_val), elf_reader.name()));
-- 
2.7.4

